From Wikipedia, the free encyclopedia Jump to: navigation, search User-centered design (UCD) is a process (not restricted to interfaces or technologies) in which the needs, wants, and limitations of end users of a product, service or process are given extensive attention at each stage of the design process. User-centered design can be characterized as a multi-stage problem solving process that not only requires designers to analyse and foresee how users are likely to use a product, but also to test the validity of their assumptions with regard to user behaviour in real world tests with actual users. Such testing is necessary as it is often very difficult for the designers of a product to understand intuitively what a first-time user of their design experiences, and what each user's learning curve may look like. The chief difference from other product design philosophies is that user-centered design tries to optimize the product around how users can, want, or need to use the product, rather than forcing the users to change their behavior to accommodate the product. Contents 1 UCD models and approaches 2 Purpose 3 Elements 3.1 Visibility 3.2 Accessibility 3.3 Legibility 3.4 Language 4 Rhetorical situation 4.1 Audience 4.2 Purpose 4.3 Context 5 Analysis tools used in user-centered design 5.1 Persona 5.2 Scenario 5.3 Use case 6 User-centered design, needs and emotions 7 User-centered design in product lifecycle management systems 8 See also 9 References 10 Further reading UCD models and approaches[edit] For example, the user-centered design process can help software designers to fulfill the goal of a product engineered for their users. User requirements are considered right from the beginning and included into the whole product cycle. These requirements are noted and refined through investigative methods including: ethnographic study, contextual inquiry, prototype testing, usability testing and other methods. Generative methods may also be used including: card sorting, affinity diagramming and participatory design sessions. In addition, user requirements can be inferred by careful analysis of usable products similar to the product being designed. Cooperative design: involving designers and users on an equal footing. This is the Scandinavian tradition of design of IT artifacts and it has been evolving since 1970.[1] Participatory design (PD), a North American term for the same concept, inspired by Cooperative Design, focusing on the participation of users. Since 1990, there has been a bi-annual Participatory Design Conference.[2] Contextual design, “customer-centered design” in the actual context, including some ideas from Participatory design[3] All these approaches follow the ISO standard Human-centred design for interactive systems (ISO 9241-210, 2010). The ISO standard describes 6 key principles that will ensure a design is user centered: The design is based upon an explicit understanding of users, tasks and environments. Users are involved throughout design and development. The design is driven and refined by user-centered evaluation. The process is iterative. The design addresses the whole user experience. The design team includes multidisciplinary skills and perspectives. Purpose[edit] UCD answers questions about users and their tasks and goals, then uses the findings to make decisions about development and design. UCD of a web site, for instance, seeks to answer the following questions: Who are the users of the document? What are the users’ tasks and goals? What are the users’ experience levels with the document, and documents like it? What functions do the users need from the document? What information might the users need, and in what form do they need it? How do users think the document should work? What are the extreme environments? Is the user multitasking? Does the interface utilize different inputs modes such as touching, spoken, gestures, or orientation? Elements[edit] As examples of UCD viewpoints, the essential elements of UCD of a web site are considerations of visibility, accessibility, legibility and language. Visibility[edit] Visibility helps the user construct a mental model of the document. Models help the user predict the effect(s) of their actions while using the document. Important elements (such as those that aid navigation) should be emphatic. Users should be able to tell from a glance what they can and cannot do with the document. Accessibility[edit] Users should be able to find information quickly and easily throughout the document, regardless of its length. Users should be offered various ways to find information (such as navigational elements, search functions, table of contents, clearly labeled sections, page numbers, color-coding, etc.). Navigational elements should be consistent with the genre of the document. ‘Chunking’ is a useful strategy that involves breaking information into small pieces that can be organized into some type meaningful order or hierarchy. The ability to skim the document allows users to find their piece of information by scanning rather than reading. Bold and italic words are often used. Legibility[edit] Text should be easy to read: Through analysis of the rhetorical situation, the designer should be able to determine a useful font style. Ornamental fonts and text in all capital letters are hard to read, but italics and bolding can be helpful when used correctly. Large or small body text is also hard to read. (Screen size of 10-12 pixel sans serif and 12-16 pixel serif is recommended.) High figure-ground contrast between text and background increases legibility. Dark text against a light background is most legible. Language[edit] Depending on the rhetorical situation, certain types of language are needed. Short sentences are helpful, as are well-written texts used in explanations and similar bulk-text situations. Unless the situation calls for it, jargon or technical terms should not be used. Many writers will choose to use active voice, verbs (instead of noun strings or nominals), and simple sentence structure. Rhetorical situation[edit] A user-centered design is focused around the rhetorical situation. The rhetorical situation shapes the design of an information medium. There are three elements to consider in a rhetorical situation: Audience, Purpose, and Context. Audience[edit] The audience is the people who will be using the document. The designer must consider their age, geographical location, ethnicity, gender, education, etc. Purpose[edit] The purpose is what the document targets or what problem the document is trying to address. Context[edit] The context is the circumstances surrounding the situation. The context often answers the question: What situation has prompted the need for this document? Context also includes any social or cultural issues that may surround the situation. Analysis tools used in user-centered design[edit] There are a number of tools that are used in the analysis of user-centered design, mainly: personas, scenarios, and essential use cases.[4][dead link] Persona[edit] During the UCD process, a Persona representing the user may be created. It is a fictional character with all the characteristics of the user. Personas are created after the field research process, which typically consists of members of the primary stakeholder (user) group being observed on their behaviour, and additionally answering questionnaires or participating in interviews, or a mixture of both. After results are gathered from the field research, they are used to create personas of the primary stakeholder group. Often, there may be several personas concerning the same group of individuals, since it is almost impossible to apply all the characteristics of the stakeholder group onto one character. The character depicts a "typical" stakeholder, not an "average" individual in the primary stakeholder group, and is referred to throughout the entire design process.[5] There are also what's called a secondary persona, where the character is not a member of the primary stakeholder group and is not the main target of the design, but their needs should be met and problems solved if possible. They exist to help account for further possible problems and difficulties that may occur even though the primary stakeholder group is satisfied with their solution. There is also an anti-persona, which is the character which the design process is not made for. Personas usually include a name and picture, demographics, roles and responsibilities, goals and tasks, motivations and needs, environment and context, and a quote that can represent the character's personality. Personas are useful in the sense that they create a common shared understanding of the user group for which the design process is built around. Also, they help to prioritize the design considerations by providing a context of what the user needs and what functions are simply nice to add and have. They can also provide a human face and existence to a diversified and scattered user group, and can also create some empathy and add emotions when referring to the users. However, since personas are a generalized perception of the primary stakeholder group from collected data, the characteristics may be too broad and typical, or too much of an "average joe". Sometimes, personas can have stereotypical properties also, which may hurt the entire design process. Overall, personas are a useful tool that can be used since designers in the design process can have an actual person to make design measure around other than referring to a set of data or a wide range of individuals. Scenario[edit] A scenario created in the UCD process is a fictional story about the "daily life of" or a sequence of events with the primary stakeholder group as the main character. Typically, a persona that was created earlier is used as the main character of this story. The story should be specific of the events happening that relate to the problems of the primary stakeholder group, and normally the main research questions the design process is built upon. These may turn out to be a simple story about the daily life of an individual, but small details from the events should imply details about the users, and may include emotional or physical characteristics. There can be the "best-case scenario", where everything works out best for the main character, the "worst-case scenario", where the main character experiences everything going wrong around him or her, and an "average-case scenario", which is the typical life of the individual, where nothing really special or really depressing occurs, and the day just moves on. Scenarios create a social context in which the personas exist, and also create an actual physical world, instead of imagining a character with internal characteristics from gathered data and nothing else; there is more action involved in the persona's existence. A scenario is also more easily understood by people, since it is in the form of a story, and is easier to follow.[6] Yet, like the personas, these scenarios are assumptions made by the researcher and designer, and is also created from a set of organized data. Some even say such scenarios are unrealistic to real life occurrences. Also, it is difficult to explain and inform low level tasks that occur, like the thought process of the persona before acting. Use case[edit] In short, a use case describes the interaction between an individual and the rest of the world. Each use case describes an event that may occur for a short period of time in real life, but may consist of intricate details and interactions between the actor and the world.[7] It is represented as a series of simple steps for the character to achieve his or her goal, in the form of a cause-and effect scheme. Use cases are normally written in the form of a chart with two columns: first column labelled actor, second column labelled world, and the actions performed by each side written in order in the respective columns. The following is an example of a use case for performing a song on a guitar in front of an audience. Actor World choose music to play pick up guitar display sheet music perform each note on sheet music using guitar convey note to audience using sound audience provides feedback to performer assess performance and adjust as needed based on audience feedback. complete song with required adjustments audience applause The interaction between actor and the world is an act that can be seen in everyday life, and we take them as granted and don't think too much about the small detail that needs to happen in order for an act like performing a piece of music to exist. It is similar to the fact that when speaking our mother tongue, we don't think too much about grammar and how to phrase words; they just come out since we are so used to saying them. The actions between an actor and the world, notably, the primary stakeholder (user) and the world in this case, should be thought about in detail, and hence use cases are created to understand how these tiny interactions occur. An essential use case is a special kind of use case, also called an "abstract use case." Essential use cases describe the essence of the problem, and deals with the nature of the problem itself. While writing use cases, no assumptions about unrelated details should be made. In additions, the goals of the subject should be separated from the process and implementation to reach that particular goal. Below is an example of an essential use case with the same goal as the former example. Actor World choose sheet music to perform gathers necessary resources provides access to resources performs piece sequentially convey and interprets performance provides feedback completes performance Use cases are useful because they help identify useful levels of design work. They allow the designers to see the actual low level processes that are involved for a certain problem, which makes the problem easier to handle, since certain minor steps and details the user makes are exposed. The designers' job should take into consideration of these small problems in order to arrive at a final solution that works. Another way to say this is that use cases breaks a complicated task into smaller bits, where these bits are useful units. Each bit completes a small task, which then builds up to the final bigger task. Like writing code on a computer, it is easier to write the basic smaller parts and make them work first, and then put them together to finish the larger more complicated code, instead to tackling the entire code from the very beginning. The first solution is less risky because if something goes wrong with the code, it is easier to look for the problem in the smaller bits, since the segment with the problem will be the one that does not work, while in the latter solution, the programmer may have to look through the entire code to search for a single error, which proves time consuming. The same reasoning goes for writing use cases in UCD. Lastly, use cases convey useful and important tasks where the designer can see which one are of higher importance than others. Some drawbacks of writing use cases include the fact that each action, by the actor or the world, consist of little detail, and is simply a small action. This may possibly lead to further imagination and different interpretation of action from different designers. Also, during the process, it is really easy to oversimplify a task, since a small task from a larger task may consist of even smaller tasks. Picking up a guitar may involve thinking of which guitar to pick up, which pick to use, and think about where the guitar is located first. These tasks may then be divided into smaller tasks, such as first thinking of what colour of guitar fits the place to perform the piece, and other related details. Tasks may be split further down into even tinier tasks, and it is up to the designer to determine what is a suitable place to stop splitting up the tasks.[8] Tasks may not only be oversimplified, they may also be omitted in whole, thus the designer should be aware of all the detail and all the key steps that are involved in an event or action when writing use cases. User-centered design, needs and emotions[edit] The book "The Design of Everyday Things" (originally called "The Psychology of Everyday Things") was first published in 1986. In this book, Donald A. Norman describes the psychology behind what he deems 'good' and 'bad' design through examples and offers principles of 'good' design. He exalts the importance of design in our everyday lives, and the consequences of errors caused by bad designs. In his book, Norman uses the term "user-centered design" to describe design based on the needs of the user, leaving aside what he considers secondary issues like aesthetics. User-centered design involves simplifying the structure of tasks, making things visible, getting the mapping right, exploiting the powers of constraint, and designing for error. Norman's overly reductive[citation needed] approach in this text was readdressed by him later in his own publication "Emotional Design." Other books in a similar vein include "Designing Pleasurable Products"[9] by Patrick W. Jordan, in which the author suggests that different forms of pleasure should be included in a user-centered approach in addition to traditional definitions of usability. User-centered design in product lifecycle management systems[edit] This section does not cite any references or sources. Please help improve this section by adding citations to reliable sources. Unsourced material may be challenged and removed. (July 2014) Software applications (or often suites of applications) used in product lifecycle management (typically including CAD, CAM and CAx processes) can be typically characterized by the need for these solutions to serve the needs of a broad range of users, with each user having a particular job role and skill level. For example, a CAD digital mockup might be utilized by a novice analyst, design engineer of moderate skills, or a manufacturing planner of advanced skills. See also[edit] Action research Activity-centered design Chief Experience Officer (CXO) Component-Based Usability Testing Contextual inquiry Design Thinking Empathic design Human-centered computing Human-Centred Systems Information architecture Interaction design Needs analysis Paper prototyping Participatory design Process-centered design Thanatosensitivity Transgenerational design Ubiquitous computing Usability User-design World Usability Day References[edit] ^ Greenbaum&Kyng (eds): Design At Work - Cooperative design of Computer Systems, Lawrence Erlbaum 1991 ^ Schuler&Namioka: Participatory Design, Lawrence Erlbaum 1993 and chapter 11 in Helander’s Handbook of HCI, Elsevier 1997 ^ Beyer&Holtzblatt, Contextual Design, Kaufmann 1998 ^ [1] ^ [2] ^ Information & Design: Designing for Humans ^ Gatherspace: Use Case Examples ^ Ratio Group: RSI - A Structured Approach to Use Cases and HCI Design ^ Designing Pleasurable Products at Google Books Further reading[edit] What is User-Centered Design? - Usability Professionals' Association The Fable of the User-Centred Designer, David Travis. An introduction to UCD principles through narrative. v t e Design Outline Portal Designer   Disciplines Communication design Advertising Book design Corporate design Environmental graphic design Exhibit design Graphic design Illustration Information design Instructional design News design Photography Retail design Signage / Traffic sign design Sustainable graphic design Typography Video design Visual merchandising Environmental design Architecture Architectural lighting design Building design Ecological design Environmental impact design Garden design Interior architecture Interior design Keyline design Landscape architecture Landscape design Passive solar building design Sustainable landscape architecture Urban design Industrial design Automotive design Furniture design Packaging and labeling Product design Production design Sensory design Service design Interaction design Experience design Icon design Immersive design Information design Level design Motion graphic design Sonic interaction design User experience design User interface design Video game design Web design Other design areas Algorithm design Public art design Ceramic / glass design Database design Drug design Electrical system design Fashion design costume jewelry Floral design Job design Game design Game art design Integrated circuit design Nuclear weapon design Nucleic acid design Organization design Process design Protein design Scenic design Social design Software design Sound design Systems design Textile design   Approaches Activity-centered By committee By contract C-K theory Closure Co-design Computer-aided Configuration Contextual Cradle-to-cradle Creative problem-solving Creativity techniques Critical Design–bid–build Design–build architect-led Ecodesign Empathic Engineering design process Error-tolerant Fault-tolerant For assembly For manufacturability For Six Sigma For testing For X Functional KISS principle Metadesign Mind mapping Modular Open Participatory Platform-based Rational Regenerative Reliability engineering Safe-life Sustainable Theory of constraints Top-down and bottom-up Transformation Transgenerational TRIZ Universal Usage-centered Use-centered User-centered User innovation Design ... controls leadership management methods pattern research science strategy thinking tool   Tools Intellectual property Organizations Awards Tools Blueprint Comprehensive layout Computer Flowchart Mockup Product design specification Prototype Sketch Storyboard Technical drawing Website wireframe Intellectual property Community design Design around Design patent Geschmacksmuster Industrial design rights European Union Organizations AIGA Chartered Society of Designers Design and Industries Association Design Council International Forum Design The Design Society Awards European Design Award German Design Award Good Design Awards (Chicago) Good Design Awards (Japan) Graphex IF product design award James Dyson Award Prince Philip Designers Prize   Related topics Aesthetics Applied arts Concept art Creative industries Cultural icon Engineering Enterprise architecture Futures studies Intelligent design New product development Philosophy of design Process simulation Slow design STEAM fields Visualization Wicked problem Design ... brief director eduction elements and principles engineer firm history knowledge language life load museum paradigm rationale review specification studio technology Commons Wikibooks Wikinews Wikiquote Wikisource Wiktionary v t e Engineering approaches School Empathic design Frugal innovation Kansei engineering Keep It Simple Stupid Minimalism Use-centered design User-centered design Concepts Ornament and Crime Planned obsolescence Sustainability Theory of constraints Usability Retrieved from "http://en.wikipedia.org/w/index.php?title=User-centered_design&oldid=633627577" Categories: Human–computer interaction Design Usability Technical communication Hidden categories: All articles with dead external links Articles with dead external links from August 2014 All articles with unsourced statements Articles with unsourced statements from September 2009 Articles needing additional references from July 2014 All articles needing additional references